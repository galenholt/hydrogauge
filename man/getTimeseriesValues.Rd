% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getTimeseriesValues.R
\name{getTimeseriesValues}
\alias{getTimeseriesValues}
\title{Get timeseries from Kiwis (BOM)}
\usage{
getTimeseriesValues(
  portal,
  ts_id = NULL,
  ts_path = NULL,
  start_time = NULL,
  end_time = NULL,
  period = NULL,
  returnfields = "default",
  meta_returnfields = "default",
  extra_list = list(NULL),
  timetype = "char"
)
}
\arguments{
\item{portal}{URL to Kisters KiWIS database. Default is Australian BOM,
www.bom.gov.au/waterdata/services, but likely works for other KiWIS}

\item{ts_id}{timeseries id, typically found from \code{\link[=getTimeseriesList]{getTimeseriesList()}}}

\item{ts_path}{timeseries path, which can be constructed, including wildcards, e.g. \code{ts_path = '*/A4260505/Water*/*DailyMean'} Gets the daily means for all 'Water' variables at gauge A4260505, which might include Level, Discharge, Temperature, etc..}

\item{start_time}{character or date or date time for the start. Default NULL.}

\item{end_time}{character or date or date time for the end. Default NULL.}

\item{period}{character, default NULL. The special case 'complete' returns the full set of data. Otherwise, beginning with 'P', followed by numbers and characers indicating timespan, e.g. 'P2W'. See \href{https://timeseriesdoc.sepa.org.uk/api-documentation/api-function-reference/specifying-date-and-time/}{documentation}.}

\item{returnfields}{return fields for the data itself. Default is \code{c('Timestamp', 'Value', 'Quality Code')}. Full list from \link{Kisters}(from \href{https://timeseries.sepa.org.uk/KiWIS/KiWIS?datasource=0&service=kisters&type=queryServices&request=getrequestinfo}{Kisters docs})}

\item{meta_returnfields}{return fields about the variable and site. seems to be able to access most of what \code{\link[=getTimeseriesList]{getTimeseriesList()}} has in its \code{returnfields}. Full list from \link{Kisters}(from \href{https://timeseries.sepa.org.uk/KiWIS/KiWIS?datasource=0&service=kisters&type=queryServices&request=getrequestinfo}{Kisters docs})}

\item{extra_list}{a named list of other fields to select on. Names (usually) should be
in \code{returnfields} (or returned when \code{returnfields = 'all'}), though not all work- see the queryfields in the \href{https://timeseries.sepa.org.uk/KiWIS/KiWIS?datasource=0&service=kisters&type=queryServices&request=getrequestinfo}{Kisters docs}.
Values should be comma-separated characters, and can contain grep wildcards e.g.
\verb{extra_list = list(station_name = 'RIVER MURRAY*)}. Can also use groups from \code{\link[=getGroupList]{getGroupList()}}, e.g. \code{extra_list = list(stationgroup_id = '20017550')} gets the MDB_WIP_Watercourse stations.}

\item{timetype}{character, one of 'char' (default), 'raw', 'UTC', or 'local'. 'char' and 'raw' both return the Timestamp as it comes from BOM, the others parse into dates.}
}
\value{
a tibble of the timeseries values. Times are in UTC.
}
\description{
This expects a \code{ts_id} or \code{ts_path} (but not both) to identify the timeseries (>= 1) to pull. \code{ts_path} can be generated on the fly with wildcards, but isn't straightforward to parse- see the output of \code{\link[=getTimeseriesList]{getTimeseriesList()}}. Though \code{ts_id} would need to be extracted from \code{\link[=getTimeseriesList]{getTimeseriesList()}}, and so may not be any easier to get programatically.
The equivalent state (hydllp) function is \code{\link[=get_ts_traces]{get_ts_traces()}} (to a close approximation).
If \code{period} is used, only one (or none) of \code{start_time} and \code{end_time} can be used. If neither is used, it gets the most recent period.
}
\details{
Timezone note: BOM documentation says data is returned in local time. This is true on the web interface, and nearly but not exactly in the API. States on the half-hour get returned on the hour, which makes parsing easier, but they are not exactly local time. For programmatic use, it's likely easiest to just work in UTC, with the caveat that the \code{start_time} and \code{end_time} need to be in 'local'.
}
