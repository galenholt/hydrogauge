% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ts_traces.R
\name{get_ts_traces2}
\alias{get_ts_traces2}
\title{Gets timeseries for sites and variables with more automation than
\code{get_ts_traces}}
\usage{
get_ts_traces2(
  baseURL = "https://data.water.vic.gov.au/cgi/webservice.exe?",
  site_list,
  datasource = "A",
  var_list = c("100", "140"),
  start_time,
  end_time,
  interval = "day",
  data_type = "mean",
  multiplier = 1,
  returnformat = "df"
)
}
\arguments{
\item{baseURL}{character, url for the base API call. Assumes Victoria, but other states may work as well, though are untested.}

\item{site_list}{character site code, either a single site code \code{"sitenumber"}, comma-separated codes in a single string \verb{"sitenumber1, sitenumber2}, or a vector of site codes \code{c("sitenumber1", "sitenumber2")}}

\item{datasource}{character for datasource code. To my knowledge, options are \code{"A"}, \code{"TELEM"}, \code{"TELEMCOPY"}. Passing multiple not currently supported.}

\item{var_list}{as in \code{\link[=get_ts_traces]{get_ts_traces()}}, but can also take \code{"all"} to get all available variables at each site in \code{site_list}}

\item{start_time}{as in \code{\link[=get_ts_traces]{get_ts_traces()}}, but can also take \code{"all"} to start at the first timepoint for each variable in \code{var_list} at each site in \code{site_list}}

\item{end_time}{as in \code{\link[=get_ts_traces]{get_ts_traces()}}, but can also take \code{"all"} to end at the last timepoint for each variable in \code{var_list} at each site in \code{site_list}}

\item{interval}{character, period to report.
\itemize{
\item Options: \code{"year"}, \code{"month"}, \code{"day"}, \code{"hour"}, \code{"minute"}, \code{"second"}. I don't think capitalisation matters.
}}

\item{data_type}{character, the statistic to apply. \emph{Warning:} only takes one value, which is applied to all variables. This may not be appropriate. If variables should have different statistics, run \code{get_ts_traces} multiple times.
\itemize{
\item Options: \code{"mean"}, \code{"max"}, \code{"min"}, \code{"start"}, \code{"end"}, \code{"first"}, \code{"last"}, \code{"tot"}, \code{"maxmin"}, \code{"point"}, \code{"cum"}. Not all are currently tested.
}}

\item{multiplier}{character, interval multiplier. I \emph{think} this allows intervals like 5 days, by passing \code{interval = 'day'} and \code{multiplier = 5}. Not tested other than 1 at present.}

\item{returnformat}{character, one of
\itemize{
\item \code{"df"} returns a tibble
\item \code{"varlist"} returns a list with an separate tibble for each variable (may have multiple sites per tibble)
\item \code{"sitelist"} returns a list with an separate tibble for each site (may have multiple variables per tibble)
\item \code{"sxvlist"} returns a list with an separate tibble for each site x variable combination
}}
}
\value{
tibble(s) with requested variables at requested sites (where they exist). See \code{returnformat}, either a tibble or list of tibbles
}
\description{
This is under development, and offers both a bit more automation and a bit
more flexibility than \code{\link[=get_ts_traces]{get_ts_traces()}}, but is currently slower due to more
API network overhead.
}
\examples{
simpletrace <- get_ts_traces2(site_list = "233217",
datasource = 'A',
var_list = "all",
start_time = "all", end_time = "all",
interval = 'year', data_type = 'mean',
multiplier = 1, returnformat = 'df')
}
